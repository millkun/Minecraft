#include <SFML/Graphics.hpp>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <iostream>

const int WIDTH = 128;  // Ширина одного дистрикта (в пикселях)
const int HEIGHT = 128; // Высота одного дистрикта (в пикселях)
const int DISTRICTS = 16; // Количество дистриктов
const int CELL_SIZE = 2048; // Размер клетки (в пикселях)
const int WINDOW_WIDTH = WIDTH * 4; // Ширина окна (4 дистрикта по горизонтали)
const int WINDOW_HEIGHT = HEIGHT * 4; // Высота окна (4 дистрикта по вертикали)

void saveImage(const sf::RenderTexture& renderTexture, const std::string& filename) {
    if (!renderTexture.getTexture().copyToImage().saveToFile(filename)) {
        std::cerr << "Ошибка при сохранении изображения: " << filename << std::endl;
    }
}



void generateSecondStep(std::vector<std::vector<int>>& grid) {
    // Применяем случайные изменения к клеткам
    for (int y = 0; y < 8; ++y) {
        for (int x = 0; x < 8; ++x) {
            if (grid[y][x] == 1) {
                // Вносим случайные изменения в соседние клетки
                for (int dy = -1; dy <= 1; ++dy) {
                    for (int dx = -1; dx <= 1; ++dx) {
                        if (dy == 0 && dx == 0) continue; // Пропускаем саму клетку
                        int ny = y + dy;
                        int nx = x + dx;
                        if (ny >= 0 && ny < 8 && nx >= 0 && nx < 8) {
                            if (std::rand() % 100 < 30) { // 30% шанс изменить соседнюю клетку
                                grid[ny][nx] = 1; // Превращаем в "землю"
                            }
                        }
                    }
                }
            }
        }
    }
}

int main() {
    // Инициализация генератора случайных чисел
    std::srand(static_cast<unsigned int>(std::time(nullptr)));

    // Создание окна
    sf::RenderWindow window(sf::VideoMode(WINDOW_WIDTH, WINDOW_HEIGHT), "Minecraft-like World Generation - Step 2");

    // Создание текстуры для отрисовки
    sf::RenderTexture renderTexture;
    renderTexture.create(WINDOW_WIDTH, WINDOW_HEIGHT);

    // Инициализация сетки (8x8 клеток)
    std::vector<std::vector<int>> grid(8, std::vector<int>(8, 0));

    // Генерация первой сетки (по аналогии с первым этапом)
    for (int i = 0; i < DISTRICTS; ++i) {
        if (std::rand() % 100 < 10) {
            grid[i / 4][i % 4] = 1; // Заполняем 10% клеток "землей"
        }
    }

    // Применение изменений для второго этапа
    generateSecondStep(grid);

    // Отрисовка клеток в текстуру
    renderTexture.clear();
    for (int y = 0; y < 8; ++y) {
        for (int x = 0; x < 8; ++x) {
            sf::Color color = (grid[y][x] == 1) ? sf::Color::Green : sf::Color::Blue;
            for (int dy = 0; dy < 16; ++dy) { // 16 пикселей на клетку
                for (int dx = 0; dx < 16; ++dx) {
                    sf::RectangleShape pixel(sf::Vector2f(1, 1));
                    pixel.setPosition(x * 16 + dx, y * 16 + dy);
                    pixel.setFillColor(color);
                    renderTexture.draw(pixel);
 }
            }
        }
    }
    renderTexture.display();

    // Сохранение изображения
    saveImage(renderTexture, "C:\\Users\\jeb32\\OneDrive\\Рабочий стол\\Всякое\\АиСД\\КурсоваяМайнкрафт\\Картинки генерации\\generation_step_2.png");

    // Основной цикл программы
    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        // Отрисовка текстуры в окно
        window.clear();
        window.draw(sf::Sprite(renderTexture.getTexture()));
        window.display();
    }

    return 0;
}
